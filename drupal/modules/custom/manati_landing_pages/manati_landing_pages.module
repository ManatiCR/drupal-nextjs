<?php

/**
 * @file
 * Primary module hooks for Manati Landing pages module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\block_content\Entity\BlockContent;
use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
use GraphQL\Deferred;
use Drupal\search_api\Item\ItemInterface;
use Drupal\Core\Cache\CacheableMetadata;

function manati_landing_pages_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {

  // $storage = $this->entityTypeManager->getStorage('search_api_index');
  // $entityType = $storage->getEntityType();
  // $query = $storage->getQuery()

  // Loading all existing Search API Indexes.

  $index = \Drupal::entityTypeManager()->getStorage('search_api_index')->load('main_index');

  $query = $index->query();

  $results = $query->execute();

  // Load all entities at once, for better performance.
  $results->preLoadResultItems();
  $result_entities = array_map(static function (ItemInterface $item) {
    return $item->getOriginalObject()->getValue();
  }, $results->getResultItems());

  // Initialise response array.
  $search_response = [];

  // Get search response from results.
  $search_response['items'] = $result_entities;

  // Add the result count to the response.
  $search_response['total'] = $results->getResultCount();

  dpm($search_response);



}

function manati_landing_pages_helper($results) {
  // Obtain result items.
  $result_items = $results->getResultItems();
  // Initialise response array.
  $search_items = [];

  // Loop through each item in the result set.
  foreach ($result_items as &$item) {
    // Load the response document into the search response array.
    $item_fields = [];
    foreach ($item->getFields() as $field) {

      $field_values = $field->getValues();
      $field_type = $field->getType();
      $value = [];
      // Fulltext multivalue fields have a different format.
      if ($field_type == 'text') {
        // Create a new array with text values instead of objects.
        foreach ($field_values as $field_value) {
          $value[] = $field_value->getText();
        }
      }
      // For other types of fields we can just grab contents from the array.
      else {
        $value = $field_values;
      }

      $item_field = [
        'label' => $field->getLabel(),
        'id' => $field->getFieldIdentifier(),
        'type' => $field_type,
        'values' => $value,
      ];

      $item_fields[] = $item_field;
    }
    $search_item = [
      'id' => $item->getId(),
      'boost' => $item->getBoost(),
      'excerpt' => $item->getExcerpt(),
      'relevance' => $item->getScore(),
      'fields' => $item_fields,
      // 'extra_data' => $item->getAllExtraData(),
    ];

    // Set the relevance score.
    $search_items[] = $search_item;

  }

  return $search_items;
}